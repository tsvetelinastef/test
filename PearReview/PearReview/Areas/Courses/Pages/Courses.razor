@page "/Courses"
@using Microsoft.AspNetCore.Identity
@using PearReview.Areas.Courses.Data
@using PearReview.Areas.Courses.Services
@using PearReview.Areas.Identity.Data
@using PearReview.Areas.Identity.Services
@using System.Security.Claims

@inject CoursesService CoursesSvc
@inject UsersService UsersSvc
@inject CurrentUserService CurrentUserSvc
@inject NavigationManager Navigation

<AuthorizeView>
    <Authorized>
        <h3 class="mb-5">Courses</h3>

        <AuthorizeView Roles="Admin,Teacher">
            <button class="btn btn-primary" @onclick="GoToCreateCourse">New Course</button>
        </AuthorizeView>

        @if (allCourses.Count == 0)
        {
            <p class="mb-5"><em>Loading...</em></p>
        }
        else
        {
            <table class="table table-hover mb-5">
                <thead>
                    <tr class="row">
                        <th class="col-1">Id</th>
                        <th class="col-3">Name</th>
                        <th class="col-2">Start Date</th>
                        <th class="col-2">Teacher</th>
                        <th class="col-4">Description</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var course in allCourses)
                    {
                        <tr class="row">
                            <td class="col-1">🔵 @course.Id</td>
                            <td class="col-3"><a href="Courses/Details/@(course.Id)">@course.Name</a></td>
                            <td class="col-2">@course.StartDate.ToLocalTime().ToString("dd MMMM yyyy")</td>
                            <td class="col-2">
                                @if (course.Teacher.FirstName != null && course.Teacher.LastName != null)
                                {
                                    @(@course.Teacher.FirstName + " " + @course.Teacher.LastName)
                                }
                                else
                                {
                                    <span>-</span>
                                }
                            </td>
                            <td class="col-4 text-truncate">@course.Description</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </Authorized>
    <NotAuthorized>
        <p>You are not authorized to access this page.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    private AppUser? currentUser;
    private IList<Course> allCourses { get; set; } = new List<Course>();

    protected override async Task OnInitializedAsync()
    {
        if (currentUser == null)
        {
            currentUser = await CurrentUserSvc.GetCurrentUser();
        }

        allCourses = await CoursesSvc.GetCourses();
    }

    private void GoToCreateCourse()
    {
        Navigation.NavigateTo("Courses/Create");
    }
}
 